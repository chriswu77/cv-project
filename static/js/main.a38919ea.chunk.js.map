{"version":3,"sources":["components/HalfBox.js","components/DoubleBox.js","components/SingleBox.js","components/ContactInfoForm.js","components/ContactInfoSubmitted.js","components/ContactInfo.js","components/DateBox.js","components/Buttons.js","components/WorkExpForm.js","components/WorkExpFormEdit.js","components/RenderExps.js","components/WorkExp.js","components/EducationForm.js","components/EducationFormEdit.js","components/RenderEdu.js","components/Education.js","App.js","index.js"],"names":["HalfBox","props","title","type","id","update","val","err","className","htmlFor","value","onChange","DoubleBox","secondBox","title1","type1","id1","update1","val1","err1","title2","type2","id2","update2","val2","err2","country","SingleBox","ContactInfoForm","updateFirstName","updateLastName","updateEmail","updatePhone","updateAddress","updateCity","updateState","updateZip","firstName","lastName","email","phone","address","city","state","zip","submitData","firstNameError","lastNameError","emailError","phoneError","addressError","cityError","stateError","zipError","onSubmit","ContactInfoSubmitted","toggleEdit","fullName","fullAddress","icon","faEdit","onClick","ContactInfo","e","setState","target","submitForm","preventDefault","validateForm","resetErrors","prevState","edit","appEdit","openForm","document","querySelector","classList","remove","requiredText","add","contactInfo","this","Component","DateBox","text","fromMonth","updateFromMonth","fromYear","updateFromYear","toMonth","updateToMonth","toYear","updateToYear","fromMonthError","fromYearError","name","disabled","hidden","min","max","step","placeholder","Buttons","newStatus","cancel","deleteExp","faTrashAlt","WorkExpForm","updateTitle","updateCompany","company","updateLocation","location","description","updateDescription","isNew","cancelForm","titleError","companyError","locationError","rows","cols","WorkExpFormEdit","exp","RenderExps","experiences","toggleEditState","descriptionBox","map","month","year","header","duration","editState","WorkExp","resetStateVals","newForm","closest","parentElement","copyArr","index","findIndex","selectedExp","updateStateVals","disableBtns","cancelEdit","enableBtns","filter","submitEditChanges","toggleNewForm","Array","from","querySelectorAll","forEach","wrapper","plus","pencil","cancelNewform","addExp","experience","uniqid","copy","unshift","faPlus","EducationForm","updateSchool","school","updateDegree","degree","updateMajor","major","updateMinor","minor","schoolError","degreeError","majorError","EducationFormEdit","edu","deleteEdu","RenderEdu","educations","minorr","degAndMajor","Education","selectedEdu","addEdu","education","App","toggleBtnState","contactEditState","workExpEditState","educationEditState","style","opacity","setContactState","status","setWorkExpEditState","setEducationEditState","createPDF","editIcon","plusIcons","display","content","html2pdf","save","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a38919ea.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\n\nconst HalfBox = (props) => {\n  const { title, type, id, update, val, err } = props;\n\n  return (\n    <div className=\"half-box\">\n      <label htmlFor={id}>{title}</label>\n      <input\n        className=\"half-form form\"\n        type={type}\n        id={id}\n        value={val}\n        onChange={update}\n      />\n      <p className=\"form-error\">{err}</p>\n    </div>\n  );\n};\n\nexport default HalfBox;\n","/* eslint-disable react/jsx-curly-brace-presence */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\nimport HalfBox from './HalfBox';\n\nconst DoubleBox = (props) => {\n  const {\n    title1,\n    type1,\n    id1,\n    update1,\n    val1,\n    err1,\n    title2,\n    type2,\n    id2,\n    update2,\n    val2,\n    err2,\n  } = props;\n\n  let secondBox;\n\n  if (type2 === 'tel') {\n    secondBox = (\n      <div className=\"half-box\">\n        <label htmlFor={id2}>{title2}</label>\n        <PhoneInput country={'us'} value={val2} onChange={update2} />\n        <p className=\"form-error\">{err2}</p>\n      </div>\n    );\n  } else {\n    secondBox = (\n      <HalfBox\n        title={title2}\n        type={type2}\n        id={id2}\n        update={update2}\n        val={val2}\n        err={err2}\n      />\n    );\n  }\n\n  return (\n    <div className=\"box-container\">\n      <HalfBox\n        title={title1}\n        type={type1}\n        id={id1}\n        update={update1}\n        val={val1}\n        err={err1}\n      />\n      {secondBox}\n    </div>\n  );\n};\n\nexport default DoubleBox;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nconst SingleBox = (props) => {\n  const { title, type, id, update, val, err } = props;\n\n  return (\n    <div className=\"single-box\">\n      <label htmlFor={id}>{title}</label>\n      <input\n        className=\"single-form form\"\n        type={type}\n        id={id}\n        value={val}\n        onChange={update}\n      />\n      <p className=\"form-error\">{err}</p>\n    </div>\n  );\n};\n\nexport default SingleBox;\n","/* eslint-disable react/jsx-curly-brace-presence */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport DoubleBox from './DoubleBox';\nimport SingleBox from './SingleBox';\nimport HalfBox from './HalfBox';\n\nconst ContactInfoForm = (props) => {\n  const {\n    updateFirstName,\n    updateLastName,\n    updateEmail,\n    updatePhone,\n    updateAddress,\n    updateCity,\n    updateState,\n    updateZip,\n    firstName,\n    lastName,\n    email,\n    phone,\n    address,\n    city,\n    state,\n    zip,\n    submitData,\n    firstNameError,\n    lastNameError,\n    emailError,\n    phoneError,\n    addressError,\n    cityError,\n    stateError,\n    zipError,\n  } = props;\n\n  return (\n    <form className=\"edit-view\" onSubmit={submitData}>\n      <h1 className=\"heading heading-text\">Contact Information</h1>\n      <DoubleBox\n        title1=\"First Name\"\n        type1=\"text\"\n        id1=\"firstName\"\n        update1={updateFirstName}\n        val1={firstName}\n        err1={firstNameError}\n        title2=\"Last Name\"\n        type2=\"text\"\n        id2=\"lastName\"\n        update2={updateLastName}\n        val2={lastName}\n        err2={lastNameError}\n      />\n      <DoubleBox\n        title1=\"Email\"\n        type1=\"email\"\n        id1=\"email\"\n        update1={updateEmail}\n        val1={email}\n        err1={emailError}\n        title2=\"Phone\"\n        type2=\"tel\"\n        id2=\"phone\"\n        update2={updatePhone}\n        val2={phone}\n        err2={phoneError}\n      />\n      <SingleBox\n        title=\"Address\"\n        type=\"text\"\n        id=\"address\"\n        update={updateAddress}\n        val={address}\n        err={addressError}\n      />\n      <div className=\"box-container\">\n        <HalfBox\n          title=\"City\"\n          type=\"text\"\n          id=\"city\"\n          update={updateCity}\n          val={city}\n          err={cityError}\n        />\n        <HalfBox\n          title=\"State\"\n          type=\"text\"\n          id=\"state\"\n          update={updateState}\n          val={state}\n          err={stateError}\n        />\n        <HalfBox\n          title=\"Zip Code\"\n          type=\"text\"\n          id=\"zip\"\n          update={updateZip}\n          val={zip}\n          err={zipError}\n        />\n      </div>\n      <div className=\"btn-container-1\">\n        <button className=\"save-btn\" type=\"submit\">\n          Save\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default ContactInfoForm;\n","/* eslint-disable react/jsx-curly-brace-presence */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\nconst ContactInfoSubmitted = (props) => {\n  const {\n    firstName,\n    lastName,\n    email,\n    phone,\n    address,\n    city,\n    state,\n    zip,\n    toggleEdit,\n  } = props;\n\n  const fullName = `${firstName} ${lastName}`;\n  const fullAddress = `${address}, ${city}, ${state} ${zip}`;\n\n  return (\n    <div className=\"submitted-view\">\n      <div className=\"header edit-heading\">\n        <h1 className=\"heading-text\">Contact Information</h1>\n        <FontAwesomeIcon\n          icon={faEdit}\n          className=\"edit-icon\"\n          onClick={toggleEdit}\n        />\n      </div>\n      <p className=\"submitted-line name\">{fullName}</p>\n      <p className=\"submitted-line\">{email}</p>\n      <p className=\"submitted-line\">{phone}</p>\n      <p className=\"submitted-line\">{fullAddress}</p>\n    </div>\n  );\n};\n\nexport default ContactInfoSubmitted;\n","/* eslint-disable react/prop-types */\n/* eslint-disable no-undef */\n/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react';\nimport ContactInfoForm from './ContactInfoForm';\nimport ContactInfoSubmitted from './ContactInfoSubmitted';\n\nclass ContactInfo extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      address: '',\n      city: '',\n      state: '',\n      zip: '',\n      firstNameError: '',\n      lastNameError: '',\n      emailError: '',\n      phoneError: '',\n      addressError: '',\n      cityError: '',\n      stateError: '',\n      zipError: '',\n      edit: true,\n    };\n  }\n\n  updateFirstName = (e) => {\n    this.setState({\n      firstName: e.target.value,\n    });\n  };\n\n  updateLastName = (e) => {\n    this.setState({\n      lastName: e.target.value,\n    });\n  };\n\n  updateEmail = (e) => {\n    this.setState({\n      email: e.target.value,\n    });\n  };\n\n  updatePhone = (phone) => {\n    this.setState({\n      phone: phone,\n    });\n  };\n\n  updateAddress = (e) => {\n    this.setState({\n      address: e.target.value,\n    });\n  };\n\n  updateCity = (e) => {\n    this.setState({\n      city: e.target.value,\n    });\n  };\n\n  updateState = (e) => {\n    this.setState({\n      state: e.target.value,\n    });\n  };\n\n  updateZip = (e) => {\n    this.setState({\n      zip: e.target.value,\n    });\n  };\n\n  submitForm = (e) => {\n    e.preventDefault();\n    const isValid = this.validateForm();\n    if (isValid) {\n      this.resetErrors();\n      this.setState(\n        (prevState) => ({ edit: !prevState.edit }),\n        () => {\n          this.props.appEdit(this.state.edit);\n        }\n      );\n    }\n  };\n\n  openForm = () => {\n    this.setState(\n      (prevState) => ({ edit: !prevState.edit }),\n      () => {\n        this.props.appEdit(this.state.edit);\n      }\n    );\n  };\n\n  resetErrors = () => {\n    this.setState({\n      firstNameError: '',\n      lastNameError: '',\n      emailError: '',\n      phoneError: '',\n      addressError: '',\n      cityError: '',\n      stateError: '',\n      zipError: '',\n    });\n\n    document.querySelector('#firstName').classList.remove('invalid');\n    document.querySelector('#lastName').classList.remove('invalid');\n    document.querySelector('#email').classList.remove('invalid');\n    document.querySelector('.form-control').classList.remove('invalid');\n    document.querySelector('#address').classList.remove('invalid');\n    document.querySelector('#city').classList.remove('invalid');\n    document.querySelector('#state').classList.remove('invalid');\n    document.querySelector('#zip').classList.remove('invalid');\n  };\n\n  validateForm = () => {\n    let firstNameError = '';\n    let lastNameError = '';\n    let emailError = '';\n    let phoneError = '';\n    let addressError = '';\n    let cityError = '';\n    let stateError = '';\n    let zipError = '';\n\n    const requiredText = 'This field is required';\n\n    if (this.state.firstName === '') {\n      firstNameError = requiredText;\n      this.setState({ firstNameError });\n      document.querySelector('#firstName').classList.add('invalid');\n      return false;\n    }\n\n    if (this.state.lastName === '') {\n      lastNameError = requiredText;\n      this.setState({ lastNameError });\n      document.querySelector('#lastName').classList.add('invalid');\n      return false;\n    }\n\n    if (this.state.email === '') {\n      emailError = requiredText;\n      this.setState({ emailError });\n      document.querySelector('#email').classList.add('invalid');\n      return false;\n    }\n\n    if (this.state.phone === '') {\n      phoneError = requiredText;\n      this.setState({ phoneError });\n      document.querySelector('.form-control').classList.add('invalid');\n      return false;\n    }\n\n    if (this.state.address === '') {\n      addressError = requiredText;\n      this.setState({ addressError });\n      document.querySelector('#address').classList.add('invalid');\n      return false;\n    }\n\n    if (this.state.city === '') {\n      cityError = requiredText;\n      this.setState({ cityError });\n      document.querySelector('#city').classList.add('invalid');\n      return false;\n    }\n\n    if (this.state.state === '') {\n      stateError = requiredText;\n      this.setState({ stateError });\n      document.querySelector('#state').classList.add('invalid');\n      return false;\n    }\n\n    if (this.state.zip === '') {\n      zipError = requiredText;\n      this.setState({ zipError });\n      document.querySelector('#zip').classList.add('invalid');\n      return false;\n    }\n\n    return true;\n  };\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      email,\n      phone,\n      address,\n      city,\n      state,\n      zip,\n      firstNameError,\n      lastNameError,\n      emailError,\n      phoneError,\n      addressError,\n      cityError,\n      stateError,\n      zipError,\n    } = this.state;\n\n    const { edit } = this.state;\n    let contactInfo;\n    if (edit) {\n      contactInfo = (\n        <ContactInfoForm\n          updateFirstName={this.updateFirstName}\n          updateLastName={this.updateLastName}\n          updateEmail={this.updateEmail}\n          updatePhone={this.updatePhone}\n          updateAddress={this.updateAddress}\n          updateCity={this.updateCity}\n          updateState={this.updateState}\n          updateZip={this.updateZip}\n          firstName={firstName}\n          lastName={lastName}\n          email={email}\n          phone={phone}\n          address={address}\n          city={city}\n          state={state}\n          zip={zip}\n          submitData={this.submitForm}\n          firstNameError={firstNameError}\n          lastNameError={lastNameError}\n          emailError={emailError}\n          phoneError={phoneError}\n          addressError={addressError}\n          cityError={cityError}\n          stateError={stateError}\n          zipError={zipError}\n        />\n      );\n    } else {\n      contactInfo = (\n        <ContactInfoSubmitted\n          firstName={firstName}\n          lastName={lastName}\n          email={email}\n          phone={phone}\n          address={address}\n          city={city}\n          state={state}\n          zip={zip}\n          toggleEdit={this.openForm}\n        />\n      );\n    }\n\n    return <div className=\"contact-info-container\">{contactInfo}</div>;\n  }\n}\n\nexport default ContactInfo;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nconst DateBox = (props) => {\n  const {\n    text,\n    fromMonth,\n    updateFromMonth,\n    fromYear,\n    updateFromYear,\n    toMonth,\n    updateToMonth,\n    toYear,\n    updateToYear,\n    fromMonthError,\n    fromYearError,\n  } = props;\n\n  return (\n    <div className=\"date-dbl-container\">\n      <div className=\"date-single-container\">\n        <div className=\"month-container\">\n          <label htmlFor=\"from-month-dropdown\">From Month</label>\n          <select\n            id=\"from-month-dropdown\"\n            value={fromMonth}\n            onChange={updateFromMonth}\n          >\n            <option name=\"\" value=\"\" disabled hidden>\n              MM\n            </option>\n            <option name=\"January\" value=\"Jan\">\n              January\n            </option>\n            <option name=\"February\" value=\"Feb\">\n              February\n            </option>\n            <option name=\"March\" value=\"Mar\">\n              March\n            </option>\n            <option name=\"April\" value=\"Apr\">\n              April\n            </option>\n            <option name=\"May\" value=\"May\">\n              May\n            </option>\n            <option name=\"June\" value=\"Jun\">\n              June\n            </option>\n            <option name=\"July\" value=\"Jul\">\n              July\n            </option>\n            <option name=\"August\" value=\"Aug\">\n              August\n            </option>\n            <option name=\"September\" value=\"Sep\">\n              September\n            </option>\n            <option name=\"October\" value=\"Oct\">\n              October\n            </option>\n            <option name=\"November\" value=\"Nov\">\n              November\n            </option>\n            <option name=\"December\" value=\"Dec\">\n              December\n            </option>\n          </select>\n          <p className=\"form-error\">{fromMonthError}</p>\n        </div>\n        <div className=\"year-container\">\n          <label htmlFor=\"from-year\">Year(YYYY)</label>\n          <input\n            type=\"number\"\n            min=\"1900\"\n            max=\"2099\"\n            step=\"1\"\n            placeholder=\"YYYY\"\n            id=\"from-year\"\n            value={fromYear}\n            onChange={updateFromYear}\n          />\n          <p className=\"form-error\">{fromYearError}</p>\n        </div>\n      </div>\n      <div className=\"date-single-container\">\n        <div className=\"month-container\">\n          <label htmlFor=\"to-month-dropdown\">To Month</label>\n          <select\n            id=\"to-month-dropdown\"\n            value={toMonth}\n            onChange={updateToMonth}\n          >\n            <option name=\"\" value=\"\" disabled hidden>\n              MM\n            </option>\n            <option name=\"January\" value=\"Jan\">\n              January\n            </option>\n            <option name=\"February\" value=\"Feb\">\n              February\n            </option>\n            <option name=\"March\" value=\"Mar\">\n              March\n            </option>\n            <option name=\"April\" value=\"Apr\">\n              April\n            </option>\n            <option name=\"May\" value=\"May\">\n              May\n            </option>\n            <option name=\"June\" value=\"Jun\">\n              June\n            </option>\n            <option name=\"July\" value=\"Jul\">\n              July\n            </option>\n            <option name=\"August\" value=\"Aug\">\n              August\n            </option>\n            <option name=\"September\" value=\"Sep\">\n              September\n            </option>\n            <option name=\"October\" value=\"Oct\">\n              October\n            </option>\n            <option name=\"November\" value=\"Nov\">\n              November\n            </option>\n            <option name=\"December\" value=\"Dec\">\n              December\n            </option>\n          </select>\n        </div>\n        <div className=\"year-container\">\n          <label htmlFor=\"to-year\">Year(YYYY)</label>\n          <input\n            type=\"number\"\n            min=\"1900\"\n            max=\"2099\"\n            step=\"1\"\n            placeholder=\"YYYY\"\n            id=\"to-year\"\n            value={toYear}\n            onChange={updateToYear}\n          />\n        </div>\n        <p className=\"notice-text\">{text}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default DateBox;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst Buttons = (props) => {\n  const { newStatus, cancel, id, deleteExp } = props;\n\n  let btn;\n\n  if (newStatus) {\n    btn = (\n      <div className=\"btn-container\">\n        <button type=\"submit\" className=\"save-btn\">\n          Save\n        </button>\n        <button type=\"button\" className=\"cancel-btn\" onClick={cancel}>\n          Cancel\n        </button>\n      </div>\n    );\n  } else {\n    btn = (\n      <div className=\"edit-btn-container\">\n        <div>\n          <button type=\"submit\" className=\"save-btn\">\n            Save\n          </button>\n          <button\n            type=\"button\"\n            className=\"cancel-btn\"\n            onClick={() => cancel(id)}\n          >\n            Cancel\n          </button>\n        </div>\n        <button\n          type=\"button\"\n          className=\"trash-btn\"\n          onClick={() => deleteExp(id)}\n        >\n          <FontAwesomeIcon icon={faTrashAlt} className=\"trash-icon\" />\n          Delete\n        </button>\n      </div>\n    );\n  }\n\n  return btn;\n};\n\nexport default Buttons;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport DoubleBox from './DoubleBox';\nimport SingleBox from './SingleBox';\nimport DateBox from './DateBox';\nimport Buttons from './Buttons';\n\nconst WorkExpForm = (props) => {\n  const {\n    updateTitle,\n    title,\n    updateCompany,\n    company,\n    updateLocation,\n    location,\n    fromMonth,\n    updateFromMonth,\n    fromYear,\n    updateFromYear,\n    toMonth,\n    updateToMonth,\n    toYear,\n    updateToYear,\n    description,\n    updateDescription,\n    edit,\n    isNew,\n    updateState,\n    cancelForm,\n    titleError,\n    companyError,\n    locationError,\n    fromMonthError,\n    fromYearError,\n  } = props;\n\n  let displayForm;\n\n  if (isNew && edit) {\n    displayForm = (\n      <form className=\"edit-view\" onSubmit={updateState}>\n        <SingleBox\n          title=\"Job Title\"\n          type=\"text\"\n          id=\"title\"\n          update={updateTitle}\n          val={title}\n          err={titleError}\n        />\n        <DoubleBox\n          title1=\"Company / Organization\"\n          type1=\"text\"\n          id1=\"company\"\n          update1={updateCompany}\n          val1={company}\n          err1={companyError}\n          title2=\"Location\"\n          type2=\"text\"\n          id2=\"location\"\n          update2={updateLocation}\n          val2={location}\n          err2={locationError}\n        />\n        <DateBox\n          text=\"Leave blank if currently working here\"\n          fromMonth={fromMonth}\n          updateFromMonth={updateFromMonth}\n          fromYear={fromYear}\n          updateFromYear={updateFromYear}\n          toMonth={toMonth}\n          updateToMonth={updateToMonth}\n          toYear={toYear}\n          updateToYear={updateToYear}\n          fromMonthError={fromMonthError}\n          fromYearError={fromYearError}\n        />\n        <div className=\"description-box\">\n          <label htmlFor=\"description\">Description</label>\n          <textarea\n            id=\"description\"\n            name=\"description\"\n            rows=\"4\"\n            cols=\"50\"\n            value={description}\n            onChange={updateDescription}\n          />\n        </div>\n        <Buttons newStatus={isNew} cancel={cancelForm} />\n      </form>\n    );\n  } else {\n    displayForm = '';\n  }\n\n  return displayForm;\n};\n\nexport default WorkExpForm;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport DoubleBox from './DoubleBox';\nimport SingleBox from './SingleBox';\nimport DateBox from './DateBox';\nimport Buttons from './Buttons';\n\nconst WorkExpFormEdit = (props) => {\n  const {\n    exp,\n    updateTitle,\n    title,\n    updateCompany,\n    company,\n    updateLocation,\n    location,\n    fromMonth,\n    updateFromMonth,\n    fromYear,\n    updateFromYear,\n    toMonth,\n    updateToMonth,\n    toYear,\n    updateToYear,\n    description,\n    updateDescription,\n    updateState,\n    cancelForm,\n    deleteExp,\n    titleError,\n    companyError,\n    locationError,\n    fromMonthError,\n    fromYearError,\n  } = props;\n\n  return (\n    <form className=\"edit-view\" onSubmit={(e) => updateState(e, exp.id)}>\n      <SingleBox\n        title=\"Job Title\"\n        type=\"text\"\n        id=\"title\"\n        update={updateTitle}\n        val={title}\n        err={titleError}\n      />\n      <DoubleBox\n        title1=\"Company / Organization\"\n        type1=\"text\"\n        id1=\"company\"\n        update1={updateCompany}\n        val1={company}\n        err1={companyError}\n        title2=\"Location\"\n        type2=\"text\"\n        id2=\"location\"\n        update2={updateLocation}\n        val2={location}\n        err2={locationError}\n      />\n      <DateBox\n        text=\"Leave blank if currently working here\"\n        fromMonth={fromMonth}\n        updateFromMonth={updateFromMonth}\n        fromYear={fromYear}\n        updateFromYear={updateFromYear}\n        toMonth={toMonth}\n        updateToMonth={updateToMonth}\n        toYear={toYear}\n        updateToYear={updateToYear}\n        fromMonthError={fromMonthError}\n        fromYearError={fromYearError}\n      />\n      <div className=\"description-box\">\n        <label htmlFor=\"description\">Description</label>\n        <textarea\n          id=\"description\"\n          name=\"description\"\n          rows=\"4\"\n          cols=\"50\"\n          value={description}\n          onChange={updateDescription}\n        />\n      </div>\n      <Buttons\n        newStatus={false}\n        cancel={cancelForm}\n        id={exp.id}\n        deleteExp={deleteExp}\n      />\n    </form>\n  );\n};\n\nexport default WorkExpFormEdit;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport WorkExpFormEdit from './WorkExpFormEdit';\n\nconst RenderExps = (props) => {\n  const {\n    experiences,\n    toggleEditState,\n    updateTitle,\n    title,\n    updateCompany,\n    company,\n    updateLocation,\n    location,\n    fromMonth,\n    updateFromMonth,\n    fromYear,\n    updateFromYear,\n    toMonth,\n    updateToMonth,\n    toYear,\n    updateToYear,\n    description,\n    updateDescription,\n    updateState,\n    cancelForm,\n    deleteExp,\n    titleError,\n    companyError,\n    locationError,\n    fromMonthError,\n    fromYearError,\n  } = props;\n\n  const checkEnd = (month, year) => {\n    if (month === '' || year === '') {\n      return 'Present';\n    }\n    return `${month} ${year}`;\n  };\n\n  const descriptionBox = (exp) => {\n    if (exp.description !== '') {\n      return <p className=\"submitted-line\">{exp.description}</p>;\n    }\n    return '';\n  };\n\n  return (\n    <div>\n      {experiences.map((exp) => {\n        const header = `${exp.title}, ${exp.company}`;\n        const duration = `${exp.fromMonth} ${exp.fromYear} - ${checkEnd(\n          exp.toMonth,\n          exp.toYear\n        )}`;\n        if (exp.editState) {\n          return (\n            <WorkExpFormEdit\n              exp={exp}\n              updateTitle={updateTitle}\n              title={title}\n              updateCompany={updateCompany}\n              company={company}\n              updateLocation={updateLocation}\n              location={location}\n              fromMonth={fromMonth}\n              updateFromMonth={updateFromMonth}\n              fromYear={fromYear}\n              updateFromYear={updateFromYear}\n              toMonth={toMonth}\n              updateToMonth={updateToMonth}\n              toYear={toYear}\n              updateToYear={updateToYear}\n              description={description}\n              updateDescription={updateDescription}\n              updateState={updateState}\n              cancelForm={cancelForm}\n              deleteExp={deleteExp}\n              titleError={titleError}\n              companyError={companyError}\n              locationError={locationError}\n              fromMonthError={fromMonthError}\n              fromYearError={fromYearError}\n              key={exp.id}\n            />\n          );\n        }\n        return (\n          <div key={exp.id} id={exp.id} className=\"exp-container\">\n            <div className=\"exp-header-container\">\n              <p className=\"exp-title submitted-line\">{header}</p>\n              <div className=\"icon-wrapper\">\n                <FontAwesomeIcon\n                  icon={faEdit}\n                  className=\"exp-pencil submitted-line\"\n                  onClick={toggleEditState}\n                />\n              </div>\n            </div>\n            <p className=\"submitted-line\">{exp.location}</p>\n            <p className=\"submitted-line\">{duration}</p>\n            {descriptionBox(exp)}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default RenderExps;\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/no-access-state-in-setstate */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-undef */\n/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport uniqid from 'uniqid';\nimport WorkExpForm from './WorkExpForm';\nimport RenderExps from './RenderExps';\n\nclass WorkExp extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      title: '',\n      company: '',\n      location: '',\n      fromMonth: '',\n      fromYear: '',\n      toMonth: '',\n      toYear: '',\n      description: '',\n      titleError: '',\n      companyError: '',\n      locationError: '',\n      fromMonthError: '',\n      fromYearError: '',\n      edit: false,\n      newForm: false,\n      experiences: [],\n    };\n  }\n\n  updateTitle = (e) => {\n    this.setState({\n      title: e.target.value,\n    });\n  };\n\n  updateCompany = (e) => {\n    this.setState({\n      company: e.target.value,\n    });\n  };\n\n  updateLocation = (e) => {\n    this.setState({\n      location: e.target.value,\n    });\n  };\n\n  updateFromMonth = (e) => {\n    this.setState({\n      fromMonth: e.target.value,\n    });\n  };\n\n  updateFromYear = (e) => {\n    this.setState({\n      fromYear: e.target.value,\n    });\n  };\n\n  updateToMonth = (e) => {\n    this.setState({\n      toMonth: e.target.value,\n    });\n  };\n\n  updateToYear = (e) => {\n    this.setState({\n      toYear: e.target.value,\n    });\n  };\n\n  updateDescription = (e) => {\n    this.setState({\n      description: e.target.value,\n    });\n  };\n\n  resetStateVals = () => {\n    this.setState(\n      {\n        title: '',\n        company: '',\n        location: '',\n        fromMonth: '',\n        fromYear: '',\n        toMonth: '',\n        toYear: '',\n        description: '',\n        edit: false,\n        newForm: false,\n      },\n      () => {\n        this.props.appEdit(this.state.edit);\n      }\n    );\n  };\n\n  toggleEditState = (e) => {\n    const icon = e.target.closest('.icon-wrapper');\n    if (icon) {\n      const id = icon.parentElement.parentElement.id;\n      const copyArr = [...this.state.experiences];\n      const index = copyArr.findIndex((exp) => exp.id === id);\n      const selectedExp = copyArr[index];\n      selectedExp.editState = true;\n\n      this.setState(\n        (prevState) => ({\n          edit: !prevState.edit,\n          experiences: copyArr,\n        }),\n        () => {\n          this.props.appEdit(this.state.edit);\n        }\n      );\n\n      this.updateStateVals(selectedExp);\n      this.disableBtns();\n    }\n  };\n\n  cancelEdit = (id) => {\n    const copyArr = [...this.state.experiences];\n    const index = copyArr.findIndex((exp) => exp.id === id);\n    const selectedExp = copyArr[index];\n    selectedExp.editState = false;\n\n    this.resetStateVals();\n    this.setState({ experiences: copyArr });\n    this.enableBtns();\n    this.resetErrors();\n  };\n\n  deleteExp = (id) => {\n    this.resetStateVals();\n    this.setState({\n      experiences: this.state.experiences.filter((exp) => exp.id !== id),\n    });\n    this.enableBtns();\n    this.resetErrors();\n  };\n\n  submitEditChanges = (e, id) => {\n    e.preventDefault();\n\n    const isValid = this.validateForm();\n\n    if (isValid) {\n      const copyArr = [...this.state.experiences];\n      const index = copyArr.findIndex((exp) => exp.id === id);\n      const selectedExp = copyArr[index];\n\n      selectedExp.title = this.state.title;\n      selectedExp.company = this.state.company;\n      selectedExp.location = this.state.location;\n      selectedExp.fromMonth = this.state.fromMonth;\n      selectedExp.fromYear = this.state.fromYear;\n      selectedExp.toMonth = this.state.toMonth;\n      selectedExp.toYear = this.state.toYear;\n      selectedExp.description = this.state.description;\n      selectedExp.editState = false;\n\n      this.resetStateVals();\n      this.setState({ experiences: copyArr });\n      this.enableBtns();\n      this.resetErrors();\n    }\n  };\n\n  toggleNewForm = (e) => {\n    e.preventDefault();\n    this.setState(\n      (prevState) => ({\n        newForm: !prevState.newForm,\n        edit: !prevState.edit,\n      }),\n      () => {\n        this.props.appEdit(this.state.edit);\n      }\n    );\n\n    this.disableBtns();\n  };\n\n  disableBtns = () => {\n    const cursorWrappers = Array.from(\n      document.querySelectorAll('.icon-wrapper')\n    );\n    cursorWrappers.forEach((wrapper) =>\n      wrapper.classList.add('disable-cursor')\n    );\n\n    const addIcons = Array.from(document.querySelectorAll('.plus-icon'));\n    addIcons.forEach((plus) => plus.classList.add('disable'));\n\n    const editPencils = Array.from(document.querySelectorAll('.exp-pencil'));\n    editPencils.forEach((pencil) => pencil.classList.add('disable'));\n  };\n\n  enableBtns = () => {\n    const cursorWrappers = Array.from(\n      document.querySelectorAll('.icon-wrapper')\n    );\n    cursorWrappers.forEach((wrapper) =>\n      wrapper.classList.remove('disable-cursor')\n    );\n\n    const addIcons = Array.from(document.querySelectorAll('.plus-icon'));\n    addIcons.forEach((plus) => plus.classList.remove('disable'));\n\n    const editPencils = Array.from(document.querySelectorAll('.exp-pencil'));\n    editPencils.forEach((pencil) => pencil.classList.remove('disable'));\n  };\n\n  cancelNewform = () => {\n    this.resetStateVals();\n\n    this.setState({ newForm: false });\n\n    this.enableBtns();\n    this.resetErrors();\n  };\n\n  addExp = (e) => {\n    e.preventDefault();\n    const isValid = this.validateForm();\n\n    if (isValid) {\n      const experience = {\n        id: uniqid(),\n        title: this.state.title,\n        company: this.state.company,\n        location: this.state.location,\n        fromMonth: this.state.fromMonth,\n        fromYear: this.state.fromYear,\n        toMonth: this.state.toMonth,\n        toYear: this.state.toYear,\n        description: this.state.description,\n        editState: false,\n      };\n\n      this.cancelNewform();\n\n      const copy = [...this.state.experiences];\n      copy.unshift(experience);\n\n      this.setState({\n        experiences: copy,\n      });\n    }\n  };\n\n  updateStateVals = (exp) => {\n    this.setState({\n      title: exp.title,\n      company: exp.company,\n      location: exp.location,\n      fromMonth: exp.fromMonth,\n      fromYear: exp.fromYear,\n      toMonth: exp.toMonth,\n      toYear: exp.toYear,\n      description: exp.description,\n    });\n  };\n\n  validateForm = () => {\n    let titleError = '';\n    let companyError = '';\n    let locationError = '';\n    let fromMonthError = '';\n    let fromYearError = '';\n\n    const requiredText = 'This field is required';\n\n    if (this.state.title === '') {\n      titleError = requiredText;\n      this.setState({ titleError });\n      document.querySelector('#title').classList.add('invalid');\n      return false;\n    }\n\n    if (this.state.company === '') {\n      companyError = requiredText;\n      this.setState({ companyError });\n      document.querySelector('#company').classList.add('invalid');\n      return false;\n    }\n\n    if (this.state.location === '') {\n      locationError = requiredText;\n      this.setState({ locationError });\n      document.querySelector('#location').classList.add('invalid');\n      return false;\n    }\n\n    if (this.state.fromMonth === '') {\n      fromMonthError = 'required';\n      this.setState({ fromMonthError });\n      document.querySelector('#from-month-dropdown').classList.add('invalid');\n      return false;\n    }\n\n    if (this.state.fromYear === '') {\n      fromYearError = 'required';\n      this.setState({ fromYearError });\n      document.querySelector('#from-year').classList.add('invalid');\n      return false;\n    }\n\n    return true;\n  };\n\n  resetErrors = () => {\n    this.setState({\n      titleError: '',\n      companyError: '',\n      locationError: '',\n      fromMonthError: '',\n      fromYearError: '',\n    });\n\n    document.querySelector('#title').classList.remove('invalid');\n    document.querySelector('#company').classList.remove('invalid');\n    document.querySelector('#location').classList.remove('invalid');\n    document.querySelector('#from-month-dropdown').classList.remove('invalid');\n    document.querySelector('#from-year').classList.remove('invalid');\n  };\n\n  render() {\n    const {\n      title,\n      company,\n      location,\n      fromMonth,\n      fromYear,\n      toMonth,\n      toYear,\n      description,\n      titleError,\n      companyError,\n      locationError,\n      fromMonthError,\n      fromYearError,\n      edit,\n      newForm,\n      experiences,\n    } = this.state;\n\n    return (\n      <div className=\"work-exp-container\">\n        <div className=\"heading\" id=\"work-exp-header\">\n          <h1 className=\"heading-text\">Work Experience</h1>\n          <div className=\"icon-wrapper\">\n            <FontAwesomeIcon\n              icon={faPlus}\n              className=\"plus-icon\"\n              onClick={this.toggleNewForm}\n            />\n          </div>\n        </div>\n        <WorkExpForm\n          updateTitle={this.updateTitle}\n          title={title}\n          updateCompany={this.updateCompany}\n          company={company}\n          updateLocation={this.updateLocation}\n          location={location}\n          fromMonth={fromMonth}\n          updateFromMonth={this.updateFromMonth}\n          fromYear={fromYear}\n          updateFromYear={this.updateFromYear}\n          toMonth={toMonth}\n          updateToMonth={this.updateToMonth}\n          toYear={toYear}\n          updateToYear={this.updateToYear}\n          description={description}\n          updateDescription={this.updateDescription}\n          edit={edit}\n          isNew={newForm}\n          updateState={this.addExp}\n          cancelForm={this.cancelNewform}\n          titleError={titleError}\n          companyError={companyError}\n          locationError={locationError}\n          fromMonthError={fromMonthError}\n          fromYearError={fromYearError}\n        />\n        <RenderExps\n          experiences={experiences}\n          toggleEditState={this.toggleEditState}\n          updateTitle={this.updateTitle}\n          title={title}\n          updateCompany={this.updateCompany}\n          company={company}\n          updateLocation={this.updateLocation}\n          location={location}\n          fromMonth={fromMonth}\n          updateFromMonth={this.updateFromMonth}\n          fromYear={fromYear}\n          updateFromYear={this.updateFromYear}\n          toMonth={toMonth}\n          updateToMonth={this.updateToMonth}\n          toYear={toYear}\n          updateToYear={this.updateToYear}\n          description={description}\n          updateDescription={this.updateDescription}\n          updateState={this.submitEditChanges}\n          cancelForm={this.cancelEdit}\n          deleteExp={this.deleteExp}\n          titleError={titleError}\n          companyError={companyError}\n          locationError={locationError}\n          fromMonthError={fromMonthError}\n          fromYearError={fromYearError}\n        />\n      </div>\n    );\n  }\n}\n\nexport default WorkExp;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport DoubleBox from './DoubleBox';\nimport SingleBox from './SingleBox';\nimport DateBox from './DateBox';\nimport Buttons from './Buttons';\n\nconst EducationForm = (props) => {\n  const {\n    updateSchool,\n    school,\n    updateDegree,\n    degree,\n    updateMajor,\n    major,\n    updateMinor,\n    minor,\n    updateFromMonth,\n    fromMonth,\n    updateFromYear,\n    fromYear,\n    updateToMonth,\n    toMonth,\n    updateToYear,\n    toYear,\n    edit,\n    isNew,\n    updateState,\n    cancelForm,\n    schoolError,\n    degreeError,\n    majorError,\n    fromMonthError,\n    fromYearError,\n  } = props;\n\n  let displayForm;\n\n  if (isNew && edit) {\n    displayForm = (\n      <form className=\"edit-view\" onSubmit={updateState}>\n        <SingleBox\n          title=\"School Name\"\n          type=\"text\"\n          id=\"school\"\n          update={updateSchool}\n          val={school}\n          err={schoolError}\n        />\n        <SingleBox\n          title=\"Level of Education / Degree\"\n          type=\"text\"\n          id=\"degree\"\n          update={updateDegree}\n          val={degree}\n          err={degreeError}\n        />\n        <DoubleBox\n          title1=\"Major\"\n          type1=\"text\"\n          id1=\"major\"\n          update1={updateMajor}\n          val1={major}\n          err1={majorError}\n          title2=\"Minor\"\n          type2=\"text\"\n          id2=\"minor\"\n          update2={updateMinor}\n          val2={minor}\n        />\n        <DateBox\n          text=\"Or expected graduation date\"\n          fromMonth={fromMonth}\n          updateFromMonth={updateFromMonth}\n          fromYear={fromYear}\n          updateFromYear={updateFromYear}\n          toMonth={toMonth}\n          updateToMonth={updateToMonth}\n          toYear={toYear}\n          updateToYear={updateToYear}\n          fromMonthError={fromMonthError}\n          fromYearError={fromYearError}\n        />\n        <Buttons newStatus={isNew} cancel={cancelForm} />\n      </form>\n    );\n  } else {\n    displayForm = '';\n  }\n\n  return displayForm;\n};\n\nexport default EducationForm;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport DoubleBox from './DoubleBox';\nimport SingleBox from './SingleBox';\nimport DateBox from './DateBox';\nimport Buttons from './Buttons';\n\nconst EducationFormEdit = (props) => {\n  const {\n    edu,\n    updateSchool,\n    school,\n    updateDegree,\n    degree,\n    updateMajor,\n    major,\n    updateMinor,\n    minor,\n    updateFromMonth,\n    fromMonth,\n    updateFromYear,\n    fromYear,\n    updateToMonth,\n    toMonth,\n    updateToYear,\n    toYear,\n    updateState,\n    cancelForm,\n    deleteEdu,\n    schoolError,\n    degreeError,\n    majorError,\n    fromMonthError,\n    fromYearError,\n  } = props;\n\n  return (\n    <form className=\"edit-view\" onSubmit={(e) => updateState(e, edu.id)}>\n      <SingleBox\n        title=\"School Name\"\n        type=\"text\"\n        id=\"school\"\n        update={updateSchool}\n        val={school}\n        err={schoolError}\n      />\n      <SingleBox\n        title=\"Level of Education / Degree\"\n        type=\"text\"\n        id=\"degree\"\n        update={updateDegree}\n        val={degree}\n        err={degreeError}\n      />\n      <DoubleBox\n        title1=\"Major\"\n        type1=\"text\"\n        id1=\"major\"\n        update1={updateMajor}\n        val1={major}\n        err1={majorError}\n        title2=\"Minor\"\n        type2=\"text\"\n        id2=\"minor\"\n        update2={updateMinor}\n        val2={minor}\n      />\n      <DateBox\n        text=\"Or expected graduation date\"\n        fromMonth={fromMonth}\n        updateFromMonth={updateFromMonth}\n        fromYear={fromYear}\n        updateFromYear={updateFromYear}\n        toMonth={toMonth}\n        updateToMonth={updateToMonth}\n        toYear={toYear}\n        updateToYear={updateToYear}\n        fromMonthError={fromMonthError}\n        fromYearError={fromYearError}\n      />\n      <Buttons\n        newStatus={false}\n        cancel={cancelForm}\n        id={edu.id}\n        deleteExp={deleteEdu}\n      />\n    </form>\n  );\n};\n\nexport default EducationFormEdit;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport EducationFormEdit from './EducationFormEdit';\n\nconst RenderEdu = (props) => {\n  const {\n    educations,\n    toggleEditState,\n    updateSchool,\n    school,\n    updateDegree,\n    degree,\n    updateMajor,\n    major,\n    updateMinor,\n    minor,\n    updateFromMonth,\n    fromMonth,\n    updateFromYear,\n    fromYear,\n    updateToMonth,\n    toMonth,\n    updateToYear,\n    toYear,\n    updateState,\n    cancelForm,\n    deleteEdu,\n    schoolError,\n    degreeError,\n    majorError,\n    fromMonthError,\n    fromYearError,\n  } = props;\n\n  const checkEnd = (month, year) => {\n    if (month === '' || year === '') {\n      return 'Current';\n    }\n    return `${month} ${year}`;\n  };\n\n  const checkMinor = (minorr) => {\n    if (minorr !== '') {\n      return `, Minor in ${minorr}`;\n    }\n    return '';\n  };\n\n  return (\n    <div>\n      {educations.map((edu) => {\n        const degAndMajor = `${edu.degree}, ${edu.major}${checkMinor(\n          edu.minor\n        )}`;\n        const duration = `${edu.fromMonth} ${edu.fromYear} - ${checkEnd(\n          edu.toMonth,\n          edu.toYear\n        )}`;\n        if (edu.editState) {\n          return (\n            <EducationFormEdit\n              edu={edu}\n              updateSchool={updateSchool}\n              school={school}\n              updateDegree={updateDegree}\n              degree={degree}\n              updateMajor={updateMajor}\n              major={major}\n              updateMinor={updateMinor}\n              minor={minor}\n              updateFromMonth={updateFromMonth}\n              fromMonth={fromMonth}\n              updateFromYear={updateFromYear}\n              fromYear={fromYear}\n              updateToMonth={updateToMonth}\n              toMonth={toMonth}\n              updateToYear={updateToYear}\n              toYear={toYear}\n              updateState={updateState}\n              cancelForm={cancelForm}\n              deleteEdu={deleteEdu}\n              schoolError={schoolError}\n              degreeError={degreeError}\n              majorError={majorError}\n              fromMonthError={fromMonthError}\n              fromYearError={fromYearError}\n              key={edu.id}\n            />\n          );\n        }\n        return (\n          <div key={edu.id} id={edu.id} className=\"exp-container\">\n            <div className=\"exp-header-container\">\n              <p className=\"exp-title submitted-line\">{edu.school}</p>\n              <div className=\"icon-wrapper\">\n                <FontAwesomeIcon\n                  icon={faEdit}\n                  className=\"exp-pencil submitted-line\"\n                  onClick={toggleEditState}\n                />\n              </div>\n            </div>\n            <p className=\"submitted-line\">{degAndMajor}</p>\n            <p className=\"submitted-line\">{duration}</p>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default RenderEdu;\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/no-access-state-in-setstate */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-undef */\n/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport uniqid from 'uniqid';\nimport EducationForm from './EducationForm';\nimport RenderEdu from './RenderEdu';\n\nclass Education extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      school: '',\n      degree: '',\n      major: '',\n      minor: '',\n      fromMonth: '',\n      fromYear: '',\n      toMonth: '',\n      toYear: '',\n      schoolError: '',\n      degreeError: '',\n      majorError: '',\n      fromMonthError: '',\n      fromYearError: '',\n      edit: false,\n      newForm: false,\n      educations: [],\n    };\n  }\n\n  updateSchool = (e) => {\n    this.setState({\n      school: e.target.value,\n    });\n  };\n\n  updateDegree = (e) => {\n    this.setState({\n      degree: e.target.value,\n    });\n  };\n\n  updateMajor = (e) => {\n    this.setState({\n      major: e.target.value,\n    });\n  };\n\n  updateMinor = (e) => {\n    this.setState({\n      minor: e.target.value,\n    });\n  };\n\n  updateFromMonth = (e) => {\n    this.setState({\n      fromMonth: e.target.value,\n    });\n  };\n\n  updateFromYear = (e) => {\n    this.setState({\n      fromYear: e.target.value,\n    });\n  };\n\n  updateToMonth = (e) => {\n    this.setState({\n      toMonth: e.target.value,\n    });\n  };\n\n  updateToYear = (e) => {\n    this.setState({\n      toYear: e.target.value,\n    });\n  };\n\n  resetStateVals = () => {\n    this.setState(\n      {\n        school: '',\n        degree: '',\n        major: '',\n        minor: '',\n        fromMonth: '',\n        fromYear: '',\n        toMonth: '',\n        toYear: '',\n        edit: false,\n        newForm: false,\n      },\n      () => {\n        this.props.appEdit(this.state.edit);\n      }\n    );\n  };\n\n  toggleEditState = (e) => {\n    const icon = e.target.closest('.icon-wrapper');\n    if (icon) {\n      const id = icon.parentElement.parentElement.id;\n      const copyArr = [...this.state.educations];\n      const index = copyArr.findIndex((edu) => edu.id === id);\n      const selectedEdu = copyArr[index];\n      selectedEdu.editState = true;\n\n      this.setState(\n        (prevState) => ({\n          edit: !prevState.edit,\n          educations: copyArr,\n        }),\n        () => {\n          this.props.appEdit(this.state.edit);\n        }\n      );\n\n      this.updateStateVals(selectedEdu);\n      this.disableBtns();\n    }\n  };\n\n  cancelEdit = (id) => {\n    const copyArr = [...this.state.educations];\n    const index = copyArr.findIndex((edu) => edu.id === id);\n    const selectedEdu = copyArr[index];\n    selectedEdu.editState = false;\n\n    this.resetStateVals();\n    this.setState({ educations: copyArr });\n    this.enableBtns();\n    this.resetErrors();\n  };\n\n  deleteEdu = (id) => {\n    this.resetStateVals();\n    this.setState({\n      educations: this.state.educations.filter((edu) => edu.id !== id),\n    });\n    this.enableBtns();\n    this.resetErrors();\n  };\n\n  submitEditChanges = (e, id) => {\n    e.preventDefault();\n\n    const isValid = this.validateForm();\n\n    if (isValid) {\n      const copyArr = [...this.state.educations];\n      const index = copyArr.findIndex((edu) => edu.id === id);\n      const selectedEdu = copyArr[index];\n\n      selectedEdu.school = this.state.school;\n      selectedEdu.degree = this.state.degree;\n      selectedEdu.major = this.state.major;\n      selectedEdu.minor = this.state.minor;\n      selectedEdu.fromMonth = this.state.fromMonth;\n      selectedEdu.fromYear = this.state.fromYear;\n      selectedEdu.toMonth = this.state.toMonth;\n      selectedEdu.toYear = this.state.toYear;\n      selectedEdu.editState = false;\n\n      this.resetStateVals();\n      this.setState({ educations: copyArr });\n      this.enableBtns();\n      this.resetErrors();\n    }\n  };\n\n  toggleNewForm = () => {\n    this.setState(\n      (prevState) => ({\n        newForm: !prevState.newForm,\n        edit: !prevState.edit,\n      }),\n      () => {\n        this.props.appEdit(this.state.edit);\n      }\n    );\n\n    this.disableBtns();\n  };\n\n  disableBtns = () => {\n    const cursorWrappers = Array.from(\n      document.querySelectorAll('.icon-wrapper')\n    );\n    cursorWrappers.forEach((wrapper) =>\n      wrapper.classList.add('disable-cursor')\n    );\n\n    const addIcons = Array.from(document.querySelectorAll('.plus-icon'));\n    addIcons.forEach((plus) => plus.classList.add('disable'));\n\n    const editPencils = Array.from(document.querySelectorAll('.exp-pencil'));\n    editPencils.forEach((pencil) => pencil.classList.add('disable'));\n  };\n\n  enableBtns = () => {\n    const cursorWrappers = Array.from(\n      document.querySelectorAll('.icon-wrapper')\n    );\n    cursorWrappers.forEach((wrapper) =>\n      wrapper.classList.remove('disable-cursor')\n    );\n\n    const addIcons = Array.from(document.querySelectorAll('.plus-icon'));\n    addIcons.forEach((plus) => plus.classList.remove('disable'));\n\n    const editPencils = Array.from(document.querySelectorAll('.exp-pencil'));\n    editPencils.forEach((pencil) => pencil.classList.remove('disable'));\n  };\n\n  cancelNewform = () => {\n    this.resetStateVals();\n\n    this.setState({ newForm: false });\n\n    this.enableBtns();\n    this.resetErrors();\n  };\n\n  addEdu = (e) => {\n    e.preventDefault();\n\n    const isValid = this.validateForm();\n\n    if (isValid) {\n      const education = {\n        id: uniqid(),\n        school: this.state.school,\n        degree: this.state.degree,\n        major: this.state.major,\n        minor: this.state.minor,\n        fromMonth: this.state.fromMonth,\n        fromYear: this.state.fromYear,\n        toMonth: this.state.toMonth,\n        toYear: this.state.toYear,\n        editState: false,\n      };\n\n      this.cancelNewform();\n\n      const copy = [...this.state.educations];\n      copy.unshift(education);\n\n      this.setState({\n        educations: copy,\n      });\n    }\n  };\n\n  updateStateVals = (edu) => {\n    this.setState({\n      school: edu.school,\n      degree: edu.degree,\n      major: edu.major,\n      minor: edu.minor,\n      fromMonth: edu.fromMonth,\n      fromYear: edu.fromYear,\n      toMonth: edu.toMonth,\n      toYear: edu.toYear,\n    });\n  };\n\n  validateForm = () => {\n    let schoolError = '';\n    let degreeError = '';\n    let majorError = '';\n    let fromMonthError = '';\n    let fromYearError = '';\n\n    const requiredText = 'This field is required';\n\n    if (this.state.school === '') {\n      schoolError = requiredText;\n      this.setState({ schoolError });\n      document.querySelector('#school').classList.add('invalid');\n      return false;\n    }\n\n    if (this.state.degree === '') {\n      degreeError = requiredText;\n      this.setState({ degreeError });\n      document.querySelector('#degree').classList.add('invalid');\n      return false;\n    }\n\n    if (this.state.major === '') {\n      majorError = requiredText;\n      this.setState({ majorError });\n      document.querySelector('#major').classList.add('invalid');\n      return false;\n    }\n\n    if (this.state.fromMonth === '') {\n      fromMonthError = 'required';\n      this.setState({ fromMonthError });\n      document.querySelector('#from-month-dropdown').classList.add('invalid');\n      return false;\n    }\n\n    if (this.state.fromYear === '') {\n      fromYearError = 'required';\n      this.setState({ fromYearError });\n      document.querySelector('#from-year').classList.add('invalid');\n      return false;\n    }\n\n    return true;\n  };\n\n  resetErrors = () => {\n    this.setState({\n      schoolError: '',\n      degreeError: '',\n      majorError: '',\n      fromMonthError: '',\n      fromYearError: '',\n    });\n\n    document.querySelector('#school').classList.remove('invalid');\n    document.querySelector('#degree').classList.remove('invalid');\n    document.querySelector('#major').classList.remove('invalid');\n    document.querySelector('#from-month-dropdown').classList.remove('invalid');\n    document.querySelector('#from-year').classList.remove('invalid');\n  };\n\n  render() {\n    const {\n      school,\n      degree,\n      major,\n      minor,\n      fromMonth,\n      fromYear,\n      toMonth,\n      toYear,\n      schoolError,\n      degreeError,\n      majorError,\n      fromMonthError,\n      fromYearError,\n      edit,\n      newForm,\n      educations,\n    } = this.state;\n\n    return (\n      <div className=\"work-exp-container\">\n        <div className=\"heading\" id=\"work-exp-header\">\n          <h1 className=\"heading-text\">Education</h1>\n          <div className=\"icon-wrapper\">\n            <FontAwesomeIcon\n              icon={faPlus}\n              className=\"plus-icon\"\n              onClick={this.toggleNewForm}\n            />\n          </div>\n        </div>\n        <EducationForm\n          updateSchool={this.updateSchool}\n          school={school}\n          updateDegree={this.updateDegree}\n          degree={degree}\n          updateMajor={this.updateMajor}\n          major={major}\n          updateMinor={this.updateMinor}\n          minor={minor}\n          updateFromMonth={this.updateFromMonth}\n          fromMonth={fromMonth}\n          updateFromYear={this.updateFromYear}\n          fromYear={fromYear}\n          updateToMonth={this.updateToMonth}\n          toMonth={toMonth}\n          updateToYear={this.updateToYear}\n          toYear={toYear}\n          edit={edit}\n          isNew={newForm}\n          updateState={this.addEdu}\n          cancelForm={this.cancelNewform}\n          schoolError={schoolError}\n          degreeError={degreeError}\n          majorError={majorError}\n          fromMonthError={fromMonthError}\n          fromYearError={fromYearError}\n        />\n        <RenderEdu\n          educations={educations}\n          toggleEditState={this.toggleEditState}\n          updateSchool={this.updateSchool}\n          school={school}\n          updateDegree={this.updateDegree}\n          degree={degree}\n          updateMajor={this.updateMajor}\n          major={major}\n          updateMinor={this.updateMinor}\n          minor={minor}\n          updateFromMonth={this.updateFromMonth}\n          fromMonth={fromMonth}\n          updateFromYear={this.updateFromYear}\n          fromYear={fromYear}\n          updateToMonth={this.updateToMonth}\n          toMonth={toMonth}\n          updateToYear={this.updateToYear}\n          toYear={toYear}\n          updateState={this.submitEditChanges}\n          cancelForm={this.cancelEdit}\n          deleteEdu={this.deleteEdu}\n          schoolError={schoolError}\n          degreeError={degreeError}\n          majorError={majorError}\n          fromMonthError={fromMonthError}\n          fromYearError={fromYearError}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Education;\n","/* eslint-disable no-unused-expressions */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-undef */\n/* eslint-disable new-cap */\n/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react';\nimport html2pdf from 'html2pdf.js';\nimport ContactInfo from './components/ContactInfo';\nimport WorkExp from './components/WorkExp';\nimport Education from './components/Education';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      contactEditState: true,\n      workExpEditState: false,\n      educationEditState: false,\n    };\n  }\n\n  toggleBtnState = () => {\n    if (\n      !this.state.contactEditState &&\n      !this.state.workExpEditState &&\n      !this.state.educationEditState\n    ) {\n      document.querySelector('#create-pdf-btn').style.opacity = 1;\n    } else {\n      document.querySelector('#create-pdf-btn').style.opacity = 0.25;\n    }\n  };\n\n  setContactState = (status) => {\n    this.setState(\n      {\n        contactEditState: status,\n      },\n      () => this.toggleBtnState()\n    );\n  };\n\n  setWorkExpEditState = (status) => {\n    this.setState(\n      {\n        workExpEditState: status,\n      },\n      () => this.toggleBtnState()\n    );\n  };\n\n  setEducationEditState = (status) => {\n    this.setState(\n      {\n        educationEditState: status,\n      },\n      () => this.toggleBtnState()\n    );\n  };\n\n  createPDF = () => {\n    if (\n      !this.state.contactEditState &&\n      !this.state.workExpEditState &&\n      !this.state.educationEditState\n    ) {\n      const editIcon = document.querySelector('.edit-icon');\n      const plusIcons = Array.from(document.querySelectorAll('.icon-wrapper'));\n\n      editIcon.style.display = 'none';\n      plusIcons.forEach((icon) => {\n        icon.style.display = 'none';\n      });\n\n      const content = document.querySelector('#main-content');\n      html2pdf().from(content).save('resume.pdf');\n\n      editIcon.style.display = 'inline-block';\n      plusIcons.forEach((icon) => {\n        icon.style.display = 'block';\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"main-title\">CV Builder</h1>\n        <div id=\"main-content\">\n          <ContactInfo appEdit={this.setContactState} />\n          <WorkExp appEdit={this.setWorkExpEditState} />\n          <Education appEdit={this.setEducationEditState} />\n        </div>\n        <button id=\"create-pdf-btn\" type=\"button\" onClick={this.createPDF}>\n          Create PDF\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable no-undef */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}